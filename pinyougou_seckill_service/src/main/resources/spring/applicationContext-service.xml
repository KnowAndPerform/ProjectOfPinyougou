<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:dubbo="http://code.alibabatech.com/schema/dubbo" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://code.alibabatech.com/schema/dubbo http://code.alibabatech.com/schema/dubbo/dubbo.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">
	<!--引入config中的properties-->
	<context:property-placeholder location="classpath*:config/*.properties"></context:property-placeholder>

	<!--<context:property-placeholder location="classpath:config/application.properties" file-encoding="UTF-8"></context:property-placeholder>-->
	<!--注入一个idwork-->
	<bean id="idWorker" class="utils.IdWorker"></bean>
	<!--dubbo协议端口号  默认:20880  ,所有的服务消费者不都是经过dubbo么,, 为什么dubbo会有冲突啊??-->
	<dubbo:protocol name="dubbo" port="20889"></dubbo:protocol>
	<!--发布服务的项目名称:-->
	<dubbo:application name="pinyougou_seckill_service"></dubbo:application>
	<!--服务的注册中心链接地址+端口号-->
	<dubbo:registry address="zookeeper://192.168.25.128:2181"/>
	<!--基于包扫描注解的形式,发布和注册服务-->
	<dubbo:annotation package="com.pinyougou.seckill.service.impl"/>
	<!--dubbo调用服务中心的服务的超时时间: 默认:1000ms-->
	<dubbo:provider timeout="50000"/>

	<!--线程池配置-->
	<bean class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor" id="executor">
		<!-- 核心线程数，默认为1-->
		<property name="corePoolSize" value="10" />
		<!--最大线程数，默认为Integer.MAX_VALUE-->
		<property name="maxPoolSize" value="50" />
		<!--队列最大长度，一般需要设置值>=notifyScheduledMainExecutor.maxNum；默认为Integer.MAX_VALUE-->
		<property name="queueCapacity" value="10000" />
		<!--线程池维护线程所允许的空闲时间，默认为60s-->
		<property name="keepAliveSeconds" value="300" />
		<!--线程池对拒绝任务（无线程可用）的处理策略，目前只支持AbortPolicy、CallerRunsPolicy；默认为后者:线程回收-->
		<property name="rejectedExecutionHandler">
			<bean class="java.util.concurrent.ThreadPoolExecutor$CallerRunsPolicy" />
		</property>
	</bean>


</beans>